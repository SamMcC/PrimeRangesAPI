plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "io.freefair.lombok" version "8.14.2"
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

configurations {
    mockitoAgent
}

dependencies {
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    implementation libs.spring.boot
    testImplementation libs.spring.boot.test

    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testImplementation libs.assertj

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    testImplementation(libs.mockito)
    mockitoAgent(libs.mockito) {
        transitive = false
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.mccormack.PrimeRangesAPI'
}

test {
    jvmArgs += "-javaagent:${configurations.mockitoAgent.asPath}"
    useJUnitPlatform()
    jacoco {
        excludes = []
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ["**/com/mccormack/config/**",
                              "**/com/mccormack/PrimeRangesAPI**",
                              "**/com/mccormack/exception/**"])
        })
    }
}
